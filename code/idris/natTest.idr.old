module natTest
import nat
import pair
import bool

||| a test, expecting O
h1: nat
h1 = addp (mkPair O O)

||| a test, expecting S (S O)
h2: nat
h2 = addp (mkPair O (S (S O)))

||| a test, expecting (S O)
h3: nat
h3 = addp (mkPair (S O) O)

||| a test, expecting (S (S (S (S (S O)))))
h4: nat
h4 = addp (mkPair (S (S O)) (S (S (S O))))

n1: nat -- expect (S O)
n1 = exp (mkPair (S O) O)

n2: nat -- expect 8
n2 = exp (mkPair (S(S O)) (S(S(S O))))

n3: bool -- expect true
n3 = lep (mkPair O O)

n4: bool -- expect false
n4 = lep (mkPair (S(S(S O))) (S(S O)))

n5: bool -- expect true
n5 = lep (mkPair (S(S O)) (S(S(S O))))

n6: bool -- expect true
n6 = lep (mkPair (S(S O)) (S(S O)))

n7: bool -- expect true
n7 = eqp (mkPair O O)

n8: bool -- expect false
n8 = eqp (mkPair (S(S O)) (S(S(S O))))

n9: bool -- expect false
n9 = eqp (mkPair (S(S(S O))) (S(S O)))

n10: bool --expect true
n10 = eqp (mkPair (S O) (S O))


